#!/usr/bin/env python
import roslib
from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "referee"
# roslib.load_manifest(PACKAGE)

gen = ParameterGenerator()

gen.add("plan",           int_t, 0, "plan ", 3, 0, 10)
gen.add("Blue7_HP",           int_t, 0, "Blue7_HP ", 400, 0, 1000)
gen.add("Blue_Outpost_HP",           int_t, 0, "Blue_Outpost_HP ", 1500, 0, 1500)
gen.add("Red7_HP",           int_t, 0, "Red7_HP ", 400, 0, 1000)
gen.add("Red_Outpost_HP",           int_t, 0, "Red_Outpost_HP ", 1500, 0, 1500)
gen.add("self_color",           int_t, 0, "self_color ", 0, 0, 1)
gen.add("Game_remain_time",           int_t, 0, "Game_remain_time ", 420, 0, 420)
gen.add("serial_open",           int_t, 0, "serial_open ", 1, 0, 1)
gen.add("a____________________",           int_t, 0,"____________________ ", 420, 0, 420)
gen.add("Blue1_HP",           int_t, 0, "Blue1_HP ", 400, 0, 1000)
gen.add("Blue2_HP",           int_t, 0, "Blue2_HP ", 400, 0, 1000)
gen.add("Blue3_HP",           int_t, 0, "Blue3_HP ", 400, 0, 1000)
gen.add("Blue4_HP",           int_t, 0, "Blue4_HP ", 400, 0, 1000)
gen.add("Blue5_HP",           int_t, 0, "Blue5_HP ", 400, 0, 1000)
gen.add("Blue_Base_HP",           int_t, 0, "Blue_Base_HP ", 400, 0, 1000)

gen.add("Red1_HP",           int_t, 0, "Red1_HP ", 400, 0, 1000)
gen.add("Red2_HP",           int_t, 0, "Red2_HP ", 400, 0, 1000)
gen.add("Red3_HP",           int_t, 0, "Red3_HP ", 400, 0, 1000)
gen.add("Red4_HP",           int_t, 0, "Red4_HP ", 400, 0, 1000)
gen.add("Red5_HP",           int_t, 0, "Red5_HP ", 400, 0, 1000)

gen.add("Red_Base_HP",           int_t, 0, "Red_Base_HP ", 1500, 0, 2000)
gen.add("b___________________",           int_t, 0, "___________________ ", 420, 0, 420)
 

gen.add("armor_id",           int_t, 0, "armor_id ", 0, 0, 10)
gen.add("enemy_dist",           int_t, 0, "enemy_dist ", 0, 0, 10)
gen.add("yaw",           int_t, 0, "yaw ", 0, -3, 3)

gen.add("Game_state",           int_t, 0, "Game_state ", 4, 0, 5)
gen.add("remain_gold",           int_t, 0, "remain_gold ", 400, 0, 1000)
gen.add("projectile_allowance_17mm",           int_t, 0, "projectile_allowance_17mm ", 400, 0, 1000)
gen.add("find_flag",           int_t, 0, "find_flag ", 0, 0, 1)

size_enum = gen.enum([ gen.const("Small",      int_t, 0, "A small constant"),
                       gen.const("Medium",     int_t, 1, "A medium constant"),
                       gen.const("Large",      int_t, 2, "A large constant"),
                       gen.const("ExtraLarge", int_t, 3, "An extra large constant")],
                     "An enum to set size")

gen.add("size", int_t, 0, "A size parameter which is edited via an enum", 1, 0, 3, edit_method=size_enum)



exit(gen.generate(PACKAGE, PACKAGE, "referee"))
